"use strict";(self.webpackChunkgw_2_pathing_wiki=self.webpackChunkgw_2_pathing_wiki||[]).push([[3606],{7181:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>l});var i=r(4848),s=r(8453);const d={id:"toggle",title:"Toggle",description:"Toggles a category on or off.  Similar in behavior to the [Show & Hide](/docs/marker-dev/attributes/showhide) attributes.",hide_table_of_contents:!0},a=void 0,n={id:"marker-dev/attributes/toggle",title:"Toggle",description:"Toggles a category on or off.  Similar in behavior to the [Show & Hide](/docs/marker-dev/attributes/showhide) attributes.",source:"@site/docs/marker-dev/attributes/toggle.md",sourceDirName:"marker-dev/attributes",slug:"/marker-dev/attributes/toggle",permalink:"/docs/marker-dev/attributes/toggle",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"toggle",title:"Toggle",description:"Toggles a category on or off.  Similar in behavior to the [Show & Hide](/docs/marker-dev/attributes/showhide) attributes.",hide_table_of_contents:!0},sidebar:"marker-dev-sidebar",previous:{title:"Tip",permalink:"/docs/marker-dev/attributes/tip"},next:{title:"TrailData",permalink:"/docs/marker-dev/attributes/traildata"}},o={},l=[{value:"Description",id:"description",level:2},{value:"Supported value",id:"supported-value",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Affected By",id:"affected-by",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Applies To"}),(0,i.jsx)(t.th,{}),(0,i.jsx)(t.th,{children:"Blish HUD (Pathing)"}),(0,i.jsx)(t.th,{children:"TacO"}),(0,i.jsx)(t.th,{children:"Burrito"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)("center",{children:"Markers"})}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:(0,i.jsx)("center",{children:"\u2714"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)("center",{children:"\u274c"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)("center",{children:"\u274c"})})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["Toggles a category on or off.  Similar in behavior to the ",(0,i.jsx)(t.a,{href:"/docs/marker-dev/attributes/showhide",children:"Show & Hide"})," attributes."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Attribute"}),(0,i.jsx)(t.th,{children:"Data Type"}),(0,i.jsx)(t.th,{children:"Default Value"}),(0,i.jsx)(t.th,{children:"Example"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"toggle"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mypack.adventures.tickletrahearne"}),(0,i.jsx)(t.td,{children:"A category to toggle when triggered. If the category is disabled, it will be enabled. If the category is enabled, it will be disabled."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"toggleCategory"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"mypack.adventures.tickletrahearne"}),(0,i.jsxs)(t.td,{children:["Alias for ",(0,i.jsx)(t.code,{children:"toggle"})," to allow for backward compatibility with TacO."]})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"supported-value",children:"Supported value"}),"\n",(0,i.jsx)(t.p,{children:"The value specified should be that of a category's full namespace (the same format used by the [type] attribute).  The category does not have to be from the same marker pack which does allow for packs to interact with each other."}),"\n",(0,i.jsx)(t.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,i.jsx)(t.p,{children:"Unlike other behaviors/filters, this attribute, when triggered, update the user's category preferences.  That is to say that a category toggle can be seen reflected in the users category dropdowns and will persist between launches of the overlay."}),"\n",(0,i.jsx)(t.h2,{id:"affected-by",children:"Affected By"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/marker-dev/attributes/autotrigger",children:"AutoTrigger"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/marker-dev/attributes/triggerrange",children:"TriggerRange"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>n});var i=r(6540);const s={},d=i.createContext(s);function a(e){const t=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);