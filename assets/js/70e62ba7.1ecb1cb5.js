"use strict";(self.webpackChunkgw_2_pathing_wiki=self.webpackChunkgw_2_pathing_wiki||[]).push([[5255],{9417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=t(4848),i=t(8453);const r={id:"creating-a-script-menu",title:"Creating a Script Menu",hide_table_of_contents:!1},o=void 0,s={id:"lua-scripting/lua-tutorials/creating-a-script-menu",title:"Creating a Script Menu",description:"In this tutorial, we'll build out an example menu with various submenus and functions.",source:"@site/docs/lua-scripting/lua-tutorials/creating-a-script-menu.mdx",sourceDirName:"lua-scripting/lua-tutorials",slug:"/lua-scripting/lua-tutorials/creating-a-script-menu",permalink:"/docs/lua-scripting/lua-tutorials/creating-a-script-menu",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"creating-a-script-menu",title:"Creating a Script Menu",hide_table_of_contents:!1},sidebar:"marker-dev-sidebar",previous:{title:"Creating a Marker",permalink:"/docs/lua-scripting/lua-tutorials/creating-a-marker"},next:{title:"What's Next?",permalink:"/docs/lua-scripting/lua-tutorials/whats-next"}},l={},c=[{value:"Creating a New Script",id:"creating-a-new-script",level:3},{value:"Creating the Menu",id:"creating-the-menu",level:3},{value:"Adding the Menu to the <code>pack.lua</code>",id:"adding-the-menu-to-the-packlua",level:3}];function u(e){const n={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"In this tutorial, we'll build out an example menu with various submenus and functions."}),"\n",(0,a.jsx)(n.h3,{id:"creating-a-new-script",children:"Creating a New Script"}),"\n",(0,a.jsxs)(n.p,{children:["Using what we learned from ",(0,a.jsx)(n.code,{children:"TriggerFunction.lua"})," let's make a new script that spawns a marker on the player, and can be triggered from the script menu."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"The mumble coordinates have the Y and Z axis swapped, so be careful if you use it to set the position of a marker!"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",metastring:'title="/Data/ExamplePack/Scripts/SpawnMarker.lua"',children:'ExamplePack.SpawnMarker = {\n    -- Instead of a table, we\'ll just keep track of one spawned marker\n    -- highlight-next-line\n    spawnedMarker = nil,\n    category = World:CategoryByType("ep.marker.category")\n}\n\nDebug:Watch("SpawnMarker", ExamplePack.SpawnMarker)\n\n-- Don\'t need to pass any params anymore\n-- highlight-next-line\nlocal function spawnNewMarker()\n    -- We\'ll use the Mumble global to get the players position\n    -- highlight-next-line\n    local playerPos = Mumble.PlayerCharacter.Position\n    local new_marker_attr = {   \n        MapVisibility = false,\n        InGameVisibility = true,\n        Category = ExamplePack.SpawnMarker.category,\n        -- Note the swapped Z and Y!\n        -- highlight-start\n        xpos = playerPos.X,\n        ypos = playerPos.Z,\n        zpos = playerPos.Y,\n        -- highlight-end\n        iconFile = "Data/ExamplePack/Markers/MarkerIcon.png",\n    }\n    -- We can just directly store the marker now\n    -- highlight-next-line\n    ExamplePack.SpawnMarker.spawnedMarker = Pack:CreateMarker(new_marker_attr)\nend\n\n-- Don\'t need to pass any params anymore, we\'ll just directly remove the marker\n-- highlight-start\nlocal function removeNewMarker()\n    if ExamplePack.SpawnMarker.spawnedMarker ~= nil then\n        ExamplePack.SpawnMarker.spawnedMarker:Remove()\n        ExamplePack.SpawnMarker.spawnedMarker = nil\n-- highlight-end\n    end\nend\n\n\n-- No params needed anymore\n-- highlight-next-line\nfunction EP_SpawnMarker()\n    -- Now we can just perform the check here and offload the logic to the new functions\n    -- highlight-start\n    if ExamplePack.SpawnMarker.spawnedMarker ~= nil then\n        removeNewMarker()\n    -- highlight-end\n    else\n        -- highlight-next-line\n        spawnNewMarker()\n    end\n\nend\n'})}),"\n",(0,a.jsx)(n.p,{children:"Nice work! Now we have a global function that should be able to spawn a marker on the player's position, and remove it if it already exists."}),"\n",(0,a.jsx)(n.h3,{id:"creating-the-menu",children:"Creating the Menu"}),"\n",(0,a.jsx)(n.p,{children:"The most important concept to understand when creating menus is that you're essentially just nesting them within each other."}),"\n",(0,a.jsxs)(n.p,{children:["The global ",(0,a.jsx)(n.code,{children:"Menu"})," object is the root of all menus, and you add onto it by calling ",(0,a.jsx)(n.code,{children:"Menu:Add"}),". This function returns a new ",(0,a.jsx)(n.code,{children:"Menu"})," object, which you can then add submenus or functions to, and so on."]}),"\n",(0,a.jsx)(n.p,{children:"Let's create a root menu for our pack, and then add a few submenu's to it."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",metastring:'title="/Data/ExamplePack/Scripts/menu.lua"',children:'-- To do something when a menu is clicked, we need to have OnClick functions...let\'s make a few\n-- This is a simple function that logs a message to the debug console, \n-- Note that it takes a menu as a parameter, a requirement for OnClick functions\nlocal function logPrint(menu)\n    Debug:Print("This is a log message from the menu!")\nend\n\n-- This function will log whether the checkbox is checked or not\nlocal function checkStatus(menu)\n    Debug:Print("Checkbox is currently: " .. tostring(menu.Checked))\nend\n\n-- This function will trigger our global SpawnMarker function\nlocal function spawnMarker(menu)\n    EP_SpawnMarker()\nend\n\n-- Now let\'s build our menu\n-- This is our root menu\nlocal rootMenu = Menu:Add("Example Menu", nil)\n\n-- Here we add a menu item to the root menu, and assign the logPrint function to it\nlocal subMenu1 = rootMenu:Add("Log to Console", logPrint, false, false, "Logs a message to the debug console")\n\n-- Here we add a submenu to the root menu\nlocal subMenu2WithChildren = rootMenu:Add("Cool Script Functions", nil, false, false, "Contains some cool script functions")\n-- Here we add a few menu items to the submenu to trigger our other functions\nlocal childMenu1 = subMenu2WithChildren:Add("Checkbox Function", checkStatus, true, false, "This function logs whether it is checked or not")\nlocal childMenu2 = subMenu2WithChildren:Add("Spawn Marker", spawnMarker, false, false, "This function will spawn a marker on the player, or remove it if it already was spawned")\n'})}),"\n",(0,a.jsxs)(n.p,{children:["With this we have the basis of a simple menu. Now all we need to do is add the scripts to our ",(0,a.jsx)(n.code,{children:"pack.lua"}),", and we should be able to see the menu in game!"]}),"\n",(0,a.jsxs)(n.h3,{id:"adding-the-menu-to-the-packlua",children:["Adding the Menu to the ",(0,a.jsx)(n.code,{children:"pack.lua"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-lua",metastring:'title="pack.lua"',children:'ExamplePack = {}\n\nPack:Require("Data/ExamplePack/Scripts/SpawnMarker.lua")\n-- Note, the menu must be loaded after any of the global functions it references. This is the same for any other script that references global functions.\nPack:Require("Data/ExamplePack/Scripts/menu.lua")\n'})}),"\n",(0,a.jsx)(n.p,{children:'Now when you load into the game, you should see a "Scripts" menu in the Pathing icon menu, and you can navigate through it to test out the submenus and functions we\'ve added!'}),"\n",(0,a.jsx)(n.p,{children:"Congrats on creating your first script menu! \ud83c\udf89"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(6540);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);